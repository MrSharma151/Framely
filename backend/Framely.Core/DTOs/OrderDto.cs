using System.ComponentModel.DataAnnotations;

namespace Framely.Core.DTOs
{
    /// <summary>
    /// Data Transfer Object for placing or retrieving an order.
    /// Includes customer details, order metadata, and item list.
    /// </summary>
    public class OrderDto
    {
        /// <summary>
        /// Unique identifier for the order.
        /// Auto-generated by the system. Used in GET and UPDATE operations.
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Timestamp when the order was placed.
        /// Defaults to current UTC time.
        /// </summary>
        public DateTime OrderDate { get; set; } = DateTime.UtcNow;

        /// <summary>
        /// Full name of the customer placing the order.
        /// Required field with a maximum length of 100 characters.
        /// </summary>
        [Required(ErrorMessage = "Customer name is required")]
        [StringLength(100, ErrorMessage = "Customer name cannot exceed 100 characters")]
        public string? CustomerName { get; set; }

        /// <summary>
        /// Email address of the customer.
        /// Required and must follow valid email format.
        /// </summary>
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string? Email { get; set; }

        /// <summary>
        /// Mobile number of the customer.
        /// Required and must follow valid phone format.
        /// </summary>
        [Required(ErrorMessage = "Mobile number is required")]
        [Phone(ErrorMessage = "Invalid phone number format")]
        public string? MobileNumber { get; set; }

        /// <summary>
        /// Shipping or billing address for the order.
        /// Required with a maximum length of 250 characters.
        /// </summary>
        [Required(ErrorMessage = "Shipping address is required")]
        [StringLength(250, ErrorMessage = "Address cannot exceed 250 characters")]
        public string? Address { get; set; }

        /// <summary>
        /// Total monetary value of the order.
        /// Must be greater than zero.
        /// </summary>
        [Range(0.01, double.MaxValue, ErrorMessage = "Total amount must be greater than 0")]
        public decimal TotalAmount { get; set; }

        /// <summary>
        /// Current status of the order (e.g., "Pending", "Processing").
        /// Defaults to "Pending".
        /// </summary>
        public string Status { get; set; } = "Pending";

        /// <summary>
        /// ID of the authenticated user placing the order.
        /// Automatically extracted from JWT token.
        /// </summary>
        public string? UserId { get; set; }

        /// <summary>
        /// List of items included in the order.
        /// Must contain at least one product.
        /// </summary>
        [MinLength(1, ErrorMessage = "Order must contain at least 1 product")]
        public List<OrderItemDto>? Items { get; set; }
    }
}